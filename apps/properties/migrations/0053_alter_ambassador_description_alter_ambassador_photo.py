# Generated by Django 4.2.14 on 2024-11-12 14:17

from django.db import migrations, models


def populate_ambassador_and_tagline(apps, schema_editor):
    Property = apps.get_model('properties', 'Property')
    Ambassador = apps.get_model('properties', 'Ambassador')

    for property_obj in Property.objects.all():
        ambassador_name = property_obj.detail_values.filter(
            property_group_detail__detail__slug='ambassadorName'
        ).first()
        tagline = property_obj.detail_values.filter(property_group_detail__detail__slug='tagLine').first()

        if ambassador_name and ambassador_name.detail_option and ambassador_name.detail_option.name:
            ambassador_obj, created = Ambassador.objects.get_or_create(name=ambassador_name.detail_option.name)
            property_obj.ambassador = ambassador_obj
            if created:
                print(f"Ambassador '{ambassador_name}' created.")
            else:
                print(f"Ambassador '{ambassador_name}' found.")

        if tagline:
            property_obj.tagline = tagline.text_value

        property_obj.save()
        print(f"Property '{property_obj.name}' updated succesfully.")


class Migration(migrations.Migration):

    dependencies = [
        ('properties', '0052_alter_property_cir_id_alter_property_permit_id_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='ambassador',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='ambassador',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='ambassador',
            name='photo',
            field=models.ImageField(blank=True, null=True, upload_to='ambassadors/'),
        ),
        migrations.AlterField(
            model_name='property',
            name='tagline',
            field=models.CharField(
                blank=True, help_text='Tagline for the property', max_length=255, verbose_name='Tagline'
            ),
        ),
        migrations.RunPython(populate_ambassador_and_tagline, reverse_code=migrations.RunPython.noop),
    ]